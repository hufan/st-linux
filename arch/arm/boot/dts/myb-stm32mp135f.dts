// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/* 
 * Copyright (C) MYiRTech 2021 - All Rights Reserved
 * Author: Alex for MYiRTech.
 */

/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/rtc/rtc-stm32.h>
#include "stm32mp135.dtsi"
#include "stm32mp13xf.dtsi"
#include "myb-stm32mp13-pinctrl.dtsi"

/ {
	model = "STMicroelectronics STM32MP135F-DK Discovery Board";
	compatible = "st,stm32mp135f-dk", "st,stm32mp135";

	aliases {
		ethernet0 = &eth1;
		ethernet1 = &eth2;
		serial0 = &uart4;
		serial1 = &usart1;
		serial2 = &uart8;
		serial3 = &usart2;
		serial4 = &uart5;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	memory@c0000000 {
		device_type = "memory";
		reg = <0xc0000000 0x20000000>;
	};

	leds {
			compatible = "gpio-leds";
			status = "okay";
			led-blue {
					function = LED_FUNCTION_HEARTBEAT;
					color = <LED_COLOR_ID_BLUE>;
					gpios = <&at9555 10 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "heartbeat";
					default-state = "off";
			};
	};

	joystick {
                compatible = "gpio-keys";
                #size-cells = <0>;
                button-0 {
                         label = "usr_button";
                         linux,code = <KEY_ENTER>;
                         interrupt-parent = <&gpioi>;
                         interrupts = <1 IRQ_TYPE_EDGE_RISING>;
                };
        };

	/*LCD Panel*/
	panel {
		compatible = "myir,070tft-7";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&ltdc_pins_a>;
		pinctrl-1 = <&ltdc_pins_sleep_a>;

		power-supply = <&v3v3_panle>;
		enable-gpios = <&gpioa 11 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpioi 0 GPIO_ACTIVE_HIGH>;

		//interrupts = <3 IRQ_TYPE_EDG
		//backlight = <&panel_backlight>;
		status = "okay";
		port {
				panel_in_rgb: endpoint {
						remote-endpoint = <&ltdc_out_rgb>; 
				};
		};
	};

	usb_phy_tuning: usb-phy-tuning {
		st,current-boost = <1>;
		st,hs-slew-ctrl;
		st,hs-dc-level = <2>;
		st,hs-rftime-reduction;
		st,hs-current-trim = <11>;
		st,hs-impedance-trim = <2>;
		st,squelch-level = <1>;
		st,hs-rx-gain-eq;
		st,no-hs-ftime-ctrl;
	};

	v3v3_ao: v3v3_ao {
		compatible = "regulator-fixed";
		regulator-name = "v3v3_ao";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	v3v3_panle: v3v3_panle {
		compatible = "regulator-fixed";
		regulator-name = "v3v3_panle";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	vddmmc: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vddmmc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	vddadcvref: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vddadcvref";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
	};

	vddadc: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vddadc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	reg_base3p3: reg-base3p3 {
		compatible = "regulator-fixed";
		regulator-name = "reg_base3p3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	reg_base1p8: reg-base1p8 {
		compatible = "regulator-fixed";
		regulator-name = "reg_base1p8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		regulator-boot-on;
	};
	
	vdd_usb: reg-vdd_usb {
		compatible = "regulator-fixed";
		regulator-name = "vdd_usb";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

        reg_lte_rst: regulator@3 {
                compatible = "regulator-fixed";
                regulator-name = "ltemodule-rst";
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <1800000>;
                gpios = <&at9555 13 GPIO_ACTIVE_HIGH>;
                regulator-always-on;
                regulator-boot-on;
        };

        reg_24l: regulator@4 {
                compatible = "regulator-fixed";
                regulator-name = "24l-wp";
                regulator-min-microvolt = <3000000>;
                regulator-max-microvolt = <3000000>;
                gpios = <&gpioa 14 GPIO_ACTIVE_LOW>;
                regulator-always-on;
                regulator-boot-on;
        };

	sys_mclk: clock-mclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <12000000>;
	};

	/*camera clock*/
	clocks {
		clk_ext_camera: clk-ext-camera {
				#clock-cells = <0>;
				compatible = "fixed-clock";
				clock-frequency = <12000000>;
		};
	
	};

	v2v8: regulator-v2v8 {
		compatible = "regulator-fixed";
		regulator-name = "v2v8";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
		regulator-boot-on;
	};

};

&dma1 {
	sram = <&dma_pool>;
};

&dma2 {
	sram = <&dma_pool>;
};

&eth1 {
	status = "okay";
	pinctrl-0 = <&eth1_pins_mx>;
	pinctrl-1 = <&eth1_sleep_pins_mx>;
	pinctrl-names = "default","sleep";

	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy0_eth1>;
	st,ext-phyclk;
	st,eth-clk-sel;
	// nvmem-cells = <&ethernet_mac1_address>;
	// nvmem-cell-names = "mac-address";
	phy-supply = <&v3v3_ao>;
	// reset-gpios =  <&gpiob 10 GPIO_ACTIVE_HIGH>;
	st,phy-reset-gpios = <&gpiob 10 GPIO_ACTIVE_HIGH>;
	reset-deassert-us = <3000>;
	reset-assert-us = <3000>;
	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy0_eth1: ethernet-phy@0 {	
			reg = <0>;
		};
	};
};

&eth2 {
	status = "okay";
	pinctrl-names = "default","sleep";
	pinctrl-0 = <&eth2_pins_mx>;
	pinctrl-1 = <&eth2_sleep_pins_mx>;
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy0_eth2>;
	st,ext-phyclk;
	st,eth-clk-sel;
	phy-supply = <&v3v3_ao>;
	//reset-gpios =  <&gpioh 5 GPIO_ACTIVE_HIGH>;
	st,phy-reset-gpios =  <&gpioh 5 GPIO_ACTIVE_HIGH>;
	reset-deassert-us = <1000>;
	reset-assert-us = <1000>;
	//nvmem-cells = <&ethernet_mac2_address>;
	//nvmem-cell-names = "mac-address";
	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy0_eth2: ethernet-phy@2 {
			reg = <2>;
		};
	};
};

&i2c1 {
	pinctrl-names = "default", "sleep";
	// pinctrl-0 = <&i2c1_pins_a>;
	// pinctrl-1 = <&i2c1_sleep_pins_a>;
	i2c-scl-rising-time-ns = <300>;
	i2c-scl-falling-time-ns = <300>;
	clock-frequency = <400000>;
	status = "disabled";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
};

&i2c2 {
	pinctrl-names = "default", "sleep";
	// pinctrl-0 = <&i2c1_pins_a>;
	// pinctrl-1 = <&i2c1_sleep_pins_a>;
	i2c-scl-rising-time-ns = <300>;
	i2c-scl-falling-time-ns = <300>;
	clock-frequency = <400000>;
	status = "disabled";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
};

&i2c3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c3_pins_a>;
	pinctrl-1 = <&i2c3_sleep_pins_a>;
	i2c-scl-rising-time-ns = <300>;
	i2c-scl-falling-time-ns = <300>;
	clock-frequency = <400000>;
	status = "okay";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;

	rx8025: rx8025@32 {
			compatible = "epson,rx8025t";
			reg = <0x32>;
	};

        at24@50 {
                compatible = "atmel,24c32";
                pagesize = <64>;
                reg = <0x50>;
        };

	at9555: at9555@20 {
			compatible = "analogtek,at9555";
			reg = <0x20>;
			#gpio-cells = <2>;
			gpio_base = <160>;
	};

	// pcf8575: gpio@20 {
	// 		compatible = "nxp,pcf8575";
	// 		reg = <0x20>;
	// 		gpio-controller;
	// 		#gpio-cells = <2>;
	// 		interrupt-parent= <&gpioi>;
	// 		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;
	// 		lines-initial-states = <0xffff>;
	// 	    interrupt-controller;
	// 		#interrupt-cells = <2>;
	// 		status = "okay";
	// };

    ptn5150: ptn5150@3d {
        compatible = "nxp,ptn5150";
        reg = <0x3d>;
        //interrupt-parent = <&gpioa>;
        //interrupts = <13 IRQ_TYPE_EDGE_FALLING>;
	connect-gpios = <&gpioa 13 GPIO_ACTIVE_HIGH>;
        connector {
            compatible = "usb-c-connector";
            label = "USB-C";
            port {
                con_usb_c_ep: endpoint {
                    remote-endpoint = <&usbotg_hs_ep>;
                };
            };
	};
    };

};

&iwdg2 {
	timeout-sec = <32>;
	status = "okay";
};

&ltdc {
	pinctrl-names = "default", "sleep";
	status = "disabled";
	port {
		#address-cells = <1>;
		#size-cells = <0>;

		ltdc_out_rgb: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&panel_in_rgb>;
		};
	};
};

&rtc {
//	st,lsco = <RTC_OUT2_RMP>;
//	pinctrl-0 = <&rtc_out2_rmp_pins_a>;
//	pinctrl-names = "default";
	status = "okay";
};

&scmi0_regu {
	scmi_vddcpu: voltd-vddcpu {
		voltd-name = "vddcpu";
		regulator-name = "vddcpu";
	};
	scmi_vdd: voltd-vdd {
		voltd-name = "vdd";
		regulator-name = "vdd";
	};
	scmi_vddcore: voltd-vddcore {
		voltd-name = "vddcore";
		regulator-name = "vddcore";
	};
	scmi_vdd_adc: voltd-vdd_adc {
		voltd-name = "vdd_adc";
		regulator-name = "vdd_adc";
	};
	scmi_vdd_usb: voltd-vdd_usb {
		voltd-name = "vdd_usb";
		regulator-name = "vdd_usb";
	};
	scmi_vdd_sd: voltd-vdd_sd {
		voltd-name = "vdd_sd";
		regulator-name = "vdd_sd";
	};
	scmi_v1v8_periph: voltd-v1v8_periph {
		voltd-name = "v1v8_periph";
		regulator-name = "v1v8_periph";
	};
	scmi_v3v3_sw: voltd-v3v3_sw {
		voltd-name = "v3v3_sw";
		regulator-name = "v3v3_sw";
	};
	scmi_pwr_on_db: voltd-pwr_on_db {
		voltd-name = "pwr_on_db";
		regulator-name = "pwr_on_db";
	};
};

&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a &sdmmc1_clk_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a &sdmmc1_clk_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpioh 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&vddmmc>;
	status = "okay";
};

/*emmc*/
&sdmmc2 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_b4_pins_b>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_b4_od_pins_b>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_b4_sleep_pins_b>;

	non-removable;
	no-sd;
	no-sdio;
	st,neg-edge;
	bus-width = <8>;
	vmmc-supply = <&vddmmc>;
	vqmmc-supply = <&vddmmc>;
	mmc-ddr-3_3v;
	status = "okay";
};

&sram {
	dma_pool: dma-sram@0 {
		reg = <0x0 0x4000>;
		pool;
	};
};

&timers3 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	pwm {
		pinctrl-0 = <&pwm3_pins_a>;
		pinctrl-1 = <&pwm3_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@2 {
		status = "okay";
	};
};

&uart4 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&uart4_pins_a>;
	pinctrl-1 = <&uart4_sleep_pins_a>;
	pinctrl-2 = <&uart4_idle_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&uart5_pins_a>;
	pinctrl-1 = <&uart5_sleep_pins_a>;
	pinctrl-2 = <&uart5_idle_pins_a>;
	// /delete-property/dmas;
	// /delete-property/dma-names;
	status = "okay";
};

&usbh_ehci {
	phys = <&usbphyc_port0>;
	status = "okay";
};

// &usbh_ohci {
// 	phys = <&usbphyc_port0>;
// 	status = "okay";
// };

&usbotg_hs {
	phys = <&usbphyc_port1 0>;
	phy-names = "usb2-phy";
	usb-role-switch;
	dr_mode = "otg";

	hnp-disable;
	srp-disable;
	adp-disable;

	status = "okay";
	port {
		usbotg_hs_ep: endpoint {
			remote-endpoint = <&con_usb_c_ep>;
		};
	};
};

&usbphyc {
	status = "okay";
};

&usbphyc_port0 {
	phy-supply = <&vdd_usb>;
	st,phy-tuning = <&usb_phy_tuning>;
};

&usbphyc_port1 {
	phy-supply = <&vdd_usb>;
	st,phy-tuning = <&usb_phy_tuning>;
};

&adc_1 {
	pinctrl-names = "default";
	pinctrl-0 = <&adc1_usb_cc_pins_a>;
	vdda-supply = <&vddadc>;
	vref-supply = <&vddadcvref>;
	status = "okay";

	// adc1: adc@0 {
	// 	/*
	// 	 * Type-C USB_PWR_CC1 & USB_PWR_CC2 on in6 & in12.
	// 	 * Use at least 5 * RC time, e.g. 5 * (Rp + Rd) * C:
	// 	 * 5 * (5.1 + 47kOhms) * 5pF => 1.3us.
	// 	 * Use arbitrary margin here (e.g. 5us).
	// 	 */
	// 	st,min-sample-time-nsecs = <5000>;
	// 	/* USB Type-C CC1 & CC2 */
	// 	st,adc-channels = <6 12>;
	// 	status = "disabled";
	// };

	adc1: adc@0 {
					st,min-sample-time-nsecs = <10000>;
					st,adc-channels = <2 8>;
					status = "okay";
	};

};

/*DCMI for camera*/
&dcmipp {
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&dcmiapp_pins_mx>;
        pinctrl-1 = <&dcmiapp_sleep_pins_mx>;
	status = "disabled";
		
		// /delete-property/dmas;
		// /delete-property/dma-names;

       // port {
       //         dcmi_0: endpoint {
       //                 remote-endpoint = <&ov5640>;
       //                 bus-width = <8>;
       // 					data-shift = <2>; /* lines 9:2 are used */
       //                 hsync-active = <0>;
       //                 vsync-active = <0>;
       //                 pclk-sample = <1>;
       //                 // pclk-max-frequency = <77000000>;
       //         };
       // };
};

&m_can2 {
	compatible = "bosch,m_can";
        pinctrl-names = "default";
        pinctrl-0 = <&m_can2_pins_a>;
        status = "okay";
};

&spi5 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi5_pins_a>;
	pinctrl-1 = <&spi5_sleep_pins_a>;
	status = "okay";
	spidev@0 {
		compatible = "rohm,dh2228fv";
		cs-gpios = <&gpioi 3 0>;
		spi-max-frequency = <20000000>;
		reg = <0>;
	};
};

#if 1
&i2s1 {
	#clock-cells = <0>;
	clocks = <&rcc SPI1>, <&rcc SPI1_K>, <&scmi0_clk CK_SCMI0_PLL3_Q>, <&scmi0_clk CK_SCMI0_PLL3_R>;
        clock-names = "pclk", "i2sclk", "x8k", "x11k";
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&i2s1_pins_mx>;
        pinctrl-1 = <&i2s1_sleep_pins_mx>;
        status = "okay";
 
        // i2s1_port: port {
        //         i2s1_endpoint: endpoint {
        //                 remote-endpoint = <&sgtl5000_endpoint>;
        //                 format = "i2s";
        //                 mclk-fs = <256>;
        //         };
        // };
};
#endif 

#if 0
&i2s1 {
		clocks = <&rcc SPI1>, <&rcc SPI1_K>, <&scmi0_clk CK_SCMI0_PLL3_Q>, <&scmi0_clk CK_SCMI0_PLL3_R>;
        clock-names = "pclk", "i2sclk", "x8k", "x11k";
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&i2s1_pins_mx>;
        pinctrl-1 = <&i2s1_sleep_pins_mx>;
        status = "okay";

        i2s1_port: port {
               i2s1_tx_endpoint: endpoint@0 {
                       remote-endpoint = <&sgtl5000_tx_endpoint>;
                       format = "i2s";
                       mclk-fs = <256>;
               };

               i2s1_rx_endpoint: endpoint@1 {
                       remote-endpoint = <&sgtl5000_rx_endpoint>;
                       format = "i2s";
                       mclk-fs = <256>;
               };
    
        };

};
#endif 

&qspi {
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&quadspi_pins_mx>;
        pinctrl-1 = <&quadspi_sleep_pins_mx>;
        reg = <0x58003000 0x1000>,
              <0x70000000 0x4000000>;
        #address-cells = <1>;
        #size-cells = <0>;
        status = "okay";

        flash0: MX35LF2G24AD@0 {
                compatible = "spi-nand";
                reg = <0>;
                spi-rx-bus-width = <4>;
                spi-max-frequency = <108000000>;
                #address-cells = <1>;
                #size-cells = <1>;
        };
};
